# Application Settings
spring.application.name=${APP_NAME:product-service}
server.port=${APP_PORT:8083}

# PostgreSQL
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:Food_delivery_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SHOW_SQL:true}
#spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# ? ????????: Multipart configuration - ??????????
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=15MB
spring.servlet.multipart.location=${java.io.tmpdir}
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.resolve-lazily=false

# ? ?????????: Server/Tomcat configuration ??? multipart
server.tomcat.max-file-size=10MB
server.tomcat.max-request-size=15MB
server.tomcat.max-http-form-post-size=15MB
server.tomcat.max-save-post-size=15MB

# ? ?????????: HTTP configuration
spring.servlet.multipart.strict-servlet-compliance=false

# Eureka Client
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90

# JWT
jwt.secret=${JWT_SECRET:myFoodDeliverySecretKey2024ThisKeyMustBeLongEnoughForSecurity}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Mapbox
mapbox.access.token=${MAPBOX_ACCESS_TOKEN}
mapbox.geocoding.limit=${MAPBOX_GEOCODING_LIMIT:1}
mapbox.geocoding.types=${MAPBOX_GEOCODING_TYPES:address,poi}
mapbox.geocoding.country=${MAPBOX_GEOCODING_COUNTRY:RU}

# Cloudinary
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# ? ?????????: Jackson configuration
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# ? ?????????: Logging ??? ??????? multipart
logging.level.com.example.deliveryproductservice=DEBUG
logging.level.org.springframework.web.multipart=DEBUG
logging.level.org.springframework.web.servlet.mvc.method.annotation=DEBUG
logging.level.org.apache.tomcat.util.http.fileupload=DEBUG
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG
logging.level.ROOT=INFO

# ? ?????????: Management endpoints ??? ???????????
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# ? ?????????: Web configuration
spring.mvc.async.request-timeout=30000
spring.web.resources.add-mappings=true

# ? ?????????: Error handling
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=false

