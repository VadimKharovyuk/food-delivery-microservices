
package com.example.deliveryproductservice.service.impl;

import com.example.deliveryproductservice.dto.FavoriteStore.FavoriteStoreApiResponse;
import com.example.deliveryproductservice.dto.FavoriteStore.FavoriteStoreResponseDto;
import com.example.deliveryproductservice.mapper.FavoriteStoreMapper;
import com.example.deliveryproductservice.model.FavoriteStore;
import com.example.deliveryproductservice.model.Store;
import com.example.deliveryproductservice.repository.FavoriteStoreRepository;
import com.example.deliveryproductservice.repository.StoreRepository;
import com.example.deliveryproductservice.service.FavoriteStoreService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Optional;

@Service
@RequiredArgsConstructor
@Slf4j
@Transactional(readOnly = true)
public class FavoriteStoreServiceImpl implements FavoriteStoreService {

    private final FavoriteStoreRepository favoriteStoreRepository;
    private final StoreRepository storeRepository;
    private final FavoriteStoreMapper favoriteStoreMapper;


    @Override
    @Transactional
    public FavoriteStoreApiResponse<FavoriteStoreResponseDto> addToFavorites(Long userId, Long storeId) {
        log.info("üåü –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ {} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", storeId, userId);

        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            if (userId == null || storeId == null) {
                return FavoriteStoreApiResponse.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞");
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
            if (favoriteStoreRepository.existsByUserIdAndStoreId(userId, storeId)) {
                log.warn("‚ö†Ô∏è –†–µ—Å—Ç–æ—Ä–∞–Ω {} —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", storeId, userId);
                return FavoriteStoreApiResponse.error("–†–µ—Å—Ç–æ—Ä–∞–Ω —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º");
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
            Optional<Store> storeOpt = storeRepository.findById(storeId);
            if (storeOpt.isEmpty()) {
                log.warn("‚ö†Ô∏è –†–µ—Å—Ç–æ—Ä–∞–Ω —Å ID {} –Ω–µ –Ω–∞–π–¥–µ–Ω", storeId);
                return FavoriteStoreApiResponse.error("–†–µ—Å—Ç–æ—Ä–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω");
            }

            Store store = storeOpt.get();

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω
            if (!Boolean.TRUE.equals(store.getIsActive())) {
                log.warn("‚ö†Ô∏è –†–µ—Å—Ç–æ—Ä–∞–Ω {} –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω", storeId);
                return FavoriteStoreApiResponse.error("–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ");
            }

            // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
            FavoriteStore favoriteStore = favoriteStoreMapper.createFavoriteStore(userId, store);
            FavoriteStore saved = favoriteStoreRepository.save(favoriteStore);

            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ DTO
            FavoriteStoreResponseDto responseDto = favoriteStoreMapper.toResponseDto(saved);

            log.info("‚úÖ –†–µ—Å—Ç–æ—Ä–∞–Ω {} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", storeId, userId);
            return FavoriteStoreApiResponse.success(responseDto, "–†–µ—Å—Ç–æ—Ä–∞–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ");

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ {} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: {}", storeId, e.getMessage(), e);
            return FavoriteStoreApiResponse.error("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ");
        }
    }

    @Override
    @Transactional
    public FavoriteStoreApiResponse<String> removeFromFavorites(Long userId, Long storeId) {
        log.info("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ {} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", storeId, userId);

        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            if (userId == null || storeId == null) {
                return FavoriteStoreApiResponse.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞");
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏
            Optional<FavoriteStore> favoriteOpt = favoriteStoreRepository.findByUserIdAndStoreId(userId, storeId);
            if (favoriteOpt.isEmpty()) {
                log.warn("‚ö†Ô∏è –†–µ—Å—Ç–æ—Ä–∞–Ω {} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", storeId, userId);
                return FavoriteStoreApiResponse.error("–†–µ—Å—Ç–æ—Ä–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º");
            }

            // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
            favoriteStoreRepository.delete(favoriteOpt.get());

            log.info("‚úÖ –†–µ—Å—Ç–æ—Ä–∞–Ω {} —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", storeId, userId);
            return FavoriteStoreApiResponse.success("removed", "–†–µ—Å—Ç–æ—Ä–∞–Ω —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ");

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ {} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: {}", storeId, e.getMessage(), e);
            return FavoriteStoreApiResponse.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ");
        }
    }

    @Override
    @Transactional
    public FavoriteStoreApiResponse<FavoriteStoreResponseDto> toggleFavorite(Long userId, Long storeId) {
        log.info("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–ª—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ {} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", storeId, userId);

        boolean isFavorite = favoriteStoreRepository.existsByUserIdAndStoreId(userId, storeId);

        if (isFavorite) {
            // –£–¥–∞–ª—è–µ–º –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
            FavoriteStoreApiResponse<String> removeResult = removeFromFavorites(userId, storeId);
            if (removeResult.getSuccess()) {
                return FavoriteStoreApiResponse.success(null, "–†–µ—Å—Ç–æ—Ä–∞–Ω —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ");
            } else {
                return FavoriteStoreApiResponse.error(removeResult.getMessage());
            }
        } else {
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
            return addToFavorites(userId, storeId);
        }
    }



    @Override
    public FavoriteStoreApiResponse<List<FavoriteStoreResponseDto>> getUserFavorites(Long userId) {
        log.info("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", userId);

        try {
            if (userId == null) {
                return FavoriteStoreApiResponse.error("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–∫–∞–∑–∞–Ω");
            }

            List<FavoriteStore> favorites = favoriteStoreRepository.findByUserIdWithStore(userId);
            List<FavoriteStoreResponseDto> responseList = favoriteStoreMapper.toResponseDtoList(favorites);

            log.info("‚úÖ –ù–∞–π–¥–µ–Ω–æ {} –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", responseList.size(), userId);
            return FavoriteStoreApiResponse.success(responseList,
                    String.format("–ù–∞–π–¥–µ–Ω–æ %d –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤", responseList.size()));

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, e.getMessage(), e);
            return FavoriteStoreApiResponse.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤");
        }
    }

    @Override
    public FavoriteStoreApiResponse<List<FavoriteStoreResponseDto>> getUserActiveFavorites(Long userId) {
        log.info("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", userId);

        try {
            if (userId == null) {
                return FavoriteStoreApiResponse.error("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–∫–∞–∑–∞–Ω");
            }

            List<FavoriteStore> activeFavorites = favoriteStoreRepository.findActiveByUserId(userId);
            List<FavoriteStoreResponseDto> responseList = favoriteStoreMapper.toResponseDtoList(activeFavorites);

            log.info("‚úÖ –ù–∞–π–¥–µ–Ω–æ {} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", responseList.size(), userId);
            return FavoriteStoreApiResponse.success(responseList,
                    String.format("–ù–∞–π–¥–µ–Ω–æ %d –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤", responseList.size()));

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, e.getMessage(), e);
            return FavoriteStoreApiResponse.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤");
        }
    }

    // ================================
    // –ü–†–û–í–ï–†–ö–ò –ò –°–¢–ê–¢–ò–°–¢–ò–ö–ê
    // ================================

    @Override
    public FavoriteStoreApiResponse<Boolean> isFavorite(Long userId, Long storeId) {
        log.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ {} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", storeId, userId);

        try {
            if (userId == null || storeId == null) {
                return FavoriteStoreApiResponse.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞");
            }

            boolean isFavorite = favoriteStoreRepository.existsByUserIdAndStoreId(userId, storeId);

            log.info("‚úÖ –†–µ—Å—Ç–æ—Ä–∞–Ω {} {} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}",
                    storeId, isFavorite ? "–Ω–∞—Ö–æ–¥–∏—Ç—Å—è" : "–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è", userId);

            return FavoriteStoreApiResponse.success(isFavorite,
                    isFavorite ? "–†–µ—Å—Ç–æ—Ä–∞–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º" : "–†–µ—Å—Ç–æ—Ä–∞–Ω –Ω–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º");

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: {}", e.getMessage(), e);
            return FavoriteStoreApiResponse.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ");
        }
    }

    @Override
    public FavoriteStoreApiResponse<Long> getUserFavoritesCount(Long userId) {
        log.info("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}", userId);

        try {
            if (userId == null) {
                return FavoriteStoreApiResponse.error("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–∫–∞–∑–∞–Ω");
            }

            long count = favoriteStoreRepository.countByUserId(userId);

            log.info("‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} –Ω–∞–π–¥–µ–Ω–æ {} –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤", userId, count);
            return FavoriteStoreApiResponse.success(count,
                    String.format("–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤", count));

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", userId, e.getMessage(), e);
            return FavoriteStoreApiResponse.error("–û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤");
        }
    }

    @Override
    public FavoriteStoreApiResponse<Long> getStoreFavoritesCount(Long storeId) {
        log.info("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ {} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", storeId);

        try {
            if (storeId == null) {
                return FavoriteStoreApiResponse.error("ID —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω");
            }

            long count = favoriteStoreRepository.countByStoreId(storeId);

            log.info("‚úÖ –†–µ—Å—Ç–æ—Ä–∞–Ω {} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ {} —Ä–∞–∑", storeId, count);
            return FavoriteStoreApiResponse.success(count,
                    String.format("–†–µ—Å—Ç–æ—Ä–∞–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ %d —Ä–∞–∑", count));

        } catch (Exception e) {
            log.error("üí• –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ {} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: {}", storeId, e.getMessage(), e);
            return FavoriteStoreApiResponse.error("–û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ");
        }
    }
}